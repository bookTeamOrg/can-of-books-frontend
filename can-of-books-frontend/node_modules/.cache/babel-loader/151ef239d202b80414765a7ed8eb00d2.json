{"ast":null,"code":"var _jsxFileName = \"/home/jamal/301/can-of-books-frontend/can-of-books-frontend/src/Content.js\";\nimport React, { Component } from 'react';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Content extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      // the function getIdTokenClaims is a promise based function\n      console.log(this.props);\n      this.props.auth0.getIdTokenClaims().then(tokenResponse => {\n        const jwt = tokenResponse.__raw;\n        const config = {\n          headers: {\n            \"Authorization\": `Bearer ${jwt}`\n          },\n          method: 'get',\n          baseURL: process.env.REACT_APP_SERVER,\n          url: '/verify-token'\n        };\n        axios(config).then(axiosResponse => {\n          // console.log('backend data', axiosResponse.data);\n          this.setState({\n            user: axiosResponse.data\n          });\n        }).catch(error => alert(error));\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      user: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Component Loaded!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), this.state.user.nickname && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data from Backend: \", this.state.user.nickname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default _c = withAuth0(Content);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/jamal/301/can-of-books-frontend/can-of-books-frontend/src/Content.js"],"names":["React","Component","withAuth0","axios","Content","constructor","props","componentDidMount","console","log","auth0","getIdTokenClaims","then","tokenResponse","jwt","__raw","config","headers","method","baseURL","process","env","REACT_APP_SERVER","url","axiosResponse","setState","user","data","catch","error","alert","state","render","nickname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,OAAO,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,iBAPkB,GAOE,MAAM;AACtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,WAAKA,KAAL,CAAWI,KAAX,CAAiBC,gBAAjB,GAAoCC,IAApC,CAAyCC,aAAa,IAAI;AAExD,cAAMC,GAAG,GAAGD,aAAa,CAACE,KAA1B;AAEA,cAAMC,MAAM,GAAG;AACbC,UAAAA,OAAO,EAAE;AACP,6BAAkB,UAASH,GAAI;AADxB,WADI;AAIbI,UAAAA,MAAM,EAAE,KAJK;AAKbC,UAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBALR;AAMbC,UAAAA,GAAG,EAAE;AANQ,SAAf;AASApB,QAAAA,KAAK,CAACa,MAAD,CAAL,CAAcJ,IAAd,CAAoBY,aAAD,IAAmB;AACpC;AAEA,eAAKC,QAAL,CAAc;AACZC,YAAAA,IAAI,EAAEF,aAAa,CAACG;AADR,WAAd;AAGD,SAND,EAMGC,KANH,CAMSC,KAAK,IAAIC,KAAK,CAACD,KAAD,CANvB;AAQD,OArBD,EAqBGD,KArBH,CAqBSC,KAAK,IAAIrB,OAAO,CAACC,GAAR,CAAYoB,KAAZ,CArBlB;AAsBD,KAhCe;;AAEd,SAAKE,KAAL,GAAa;AACTL,MAAAA,IAAI,EAAC;AADI,KAAb;AAGH;;AA6BDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAKF,KAAKD,KAAL,CAAWL,IAAX,CAAgBO,QAAhB,iBACA;AAAA,0CAEI,KAAKF,KAAL,CAAWL,IAAX,CAAgBO,QAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,cANE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAnDkC;AAsDvC,oBAAe/B,SAAS,CAACE,OAAD,CAAxB","sourcesContent":["import React, { Component } from 'react';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\n\n\n\nexport class Content extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            user:{}\n        };\n    }\n\n    componentDidMount = () => {\n        // the function getIdTokenClaims is a promise based function\n        console.log(this.props);\n        this.props.auth0.getIdTokenClaims().then(tokenResponse => {\n    \n          const jwt = tokenResponse.__raw;\n    \n          const config = {\n            headers: {\n              \"Authorization\": `Bearer ${jwt}`\n            },\n            method: 'get',\n            baseURL: process.env.REACT_APP_SERVER,\n            url: '/verify-token'\n          };\n    \n          axios(config).then((axiosResponse) => {\n            // console.log('backend data', axiosResponse.data);\n    \n            this.setState({\n              user: axiosResponse.data\n            })\n          }).catch(error => alert(error))\n    \n        }).catch(error => console.log(error));\n      };\n\n    render() {\n        return (\n            <div>\n                <p>\n          Component Loaded!\n        </p>\n        {\n          this.state.user.nickname &&\n          <p>\n            Data from Backend: {\n              this.state.user.nickname\n            }\n          </p>\n        }\n            </div>\n        )\n    }\n}\n\nexport default withAuth0(Content);\n"]},"metadata":{},"sourceType":"module"}